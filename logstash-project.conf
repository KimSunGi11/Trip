input {
  jdbc {
    jdbc_driver_library => "C:/dev_env/ojdbc6.jar"
    jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
    jdbc_connection_string => "jdbc:oracle:thin:@localhost:1521:xe"
    jdbc_user => "scott"
    jdbc_password => "tiger"
    schedule => "* * * * *"
    statement => "SELECT seq, place, address FROM travelspot"
  }
}

filter {
  ruby {
    code => '
      require "net/http"
      require "json"
      require "uri"
      
      # 장소 이름 추출
      place = event.get("place")

      # 주소 정보 추출
      address = event.get("address")
      kakao_api_key = "51da9463665748bbe0f6e31847b83198" # 실제 카카오 API 키로 대체
      
      # 주소 정보를 이용하여 카카오 API 호출
      encoded_address = URI.encode_www_form_component(address)
      uri = URI("https://dapi.kakao.com/v2/local/search/address.json?query=#{encoded_address}")
      http = Net::HTTP.new(uri.host, uri.port)
      http.use_ssl = true
      
      request = Net::HTTP::Get.new(uri)
      request["Authorization"] = "KakaoAK #{kakao_api_key}"
      
      response = http.request(request)
      data = JSON.parse(response.body)
      
      # 카카오 API 호출 결과 확인 및 위치 정보 추출
      if response.code == "200" && data["documents"].any?
        latitude = data["documents"][0]["y"].to_f
        longitude = data["documents"][0]["x"].to_f
        
        # 경도와 위도 정보를 location 필드에 저장
        event.set("location", [longitude, latitude])
        
        # place_suggest 필드에 장소 이름 저장
        event.set("place_suggest", place)
      else
        event.set("location", nil)
        event.set("place_suggest", nil)
      end
    '
  }

  mutate {
    remove_field => ["address"]
  }
}

output {
  elasticsearch {
    hosts => ["localhost:9200"]
    index => "travelspot"
    document_id => "%{seq}"
    action => "update"
    doc_as_upsert => true
  }
  
  stdout {
    codec => rubydebug
  }
}